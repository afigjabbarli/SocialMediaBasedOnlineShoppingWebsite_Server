// <auto-generated />
using System;
using App.Persistence.Contexts.Read;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Persistence.Migrations.ReadDb
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20250104104810_Some changes add to category table in database for reading")]
    partial class Somechangesaddtocategorytableindatabaseforreading
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasAnnotation("Id", "Unique identifier for the entity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("Description")
                        .HasColumnOrder(3)
                        .HasAnnotation("Description", "Description is required for validation purposes");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOrder")
                        .HasColumnOrder(4)
                        .HasAnnotation("DisplayOrder", "DisplayOrder is required for validation purposes");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2)
                        .HasAnnotation("Name", "Name is required for validation purposes");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("StatusModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StatusModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasAnnotation("Categories", "This table is used for storing categories");
                });
#pragma warning restore 612, 618
        }
    }
}
